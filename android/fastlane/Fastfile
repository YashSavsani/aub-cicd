# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Push a new build"
  lane :development do |options|

    version = options[:version] || "1.0.0" 
    build_number = options[:build_number] || 1
    release_notes = options[:release_notes] || "Lots of amazing new features to test out!"
    groups = options[:groups] || "Internal"
    testers = options[:testers] || ""

    sh "flutter clean"
    sh "flutter build apk --build-name=#{version} --build-number=#{build_number} --flavor development --target=lib/main_development.dart"

    firebase_app_distribution(
      app: "1:489119697216:android:a7da5f41eaf9125badd2a5",
      service_credentials_file: "fastlane/service-account.json",
      apk_path: "../build/app/outputs/flutter-apk/app-development-release.apk",
      testers: testers,
      groups: groups,
      release_notes: release_notes,
    )
  end

  lane :staging do |options|

    version = options[:version] || "1.0.0" 
    build_number = options[:build_number] || 1
    release_notes = options[:release_notes] || "Lots of amazing new features to test out!"
    groups = options[:groups] || "Internal"
    testers = options[:testers] || ""

    sh "flutter clean"
    sh "flutter build apk --build-name=#{version} --build-number=#{build_number} --flavor staging --target lib/main_staging.dart"

    firebase_app_distribution(
      app: "1:489119697216:android:22ca65e3c4ebffc1add2a5",
      service_credentials_file: "fastlane/service-account.json",
      apk_path: "../build/app/outputs/flutter-apk/app-staging-release.apk",
      testers: testers,
      groups: groups,
      release_notes: release_notes,
    )
  end

  lane :production do |options|

    version = options[:version] || "1.0.0" 
    build_number = options[:build_number] || 1
    release_notes = options[:release_notes] || "Lots of amazing new features to test out!"

    # Define changelog directory path
    changelog_path = "fastlane/metadata/android/en-US/changelogs/#{build_number}.txt"

    # Ensure the directory exists
    FileUtils.mkdir_p(File.dirname(changelog_path))

    # Write release notes to the changelog file
    File.write(changelog_path, release_notes)

    sh "flutter clean"
    sh "flutter build appbundle --build-name=#{version} --build-number=#{build_number} --flavor production --target lib/main_production.dart"
    
    #internal (for internal testing),alpha (for closed testing),beta (for open testing),production (for public release)
    upload_to_play_store(
      track: "internal", 
      aab: "../build/app/outputs/bundle/productionRelease/app-production-release.aab",
      key: "fastlane/supply.json",
      metadata_path: "fastlane/metadata/android",
    )
  end
end
